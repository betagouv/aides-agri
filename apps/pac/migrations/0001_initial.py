# Generated by Django 5.2.6 on 2025-09-16 11:18

import django.contrib.postgres.fields
import django.contrib.postgres.fields.hstore
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="ActeurGeographique",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("code", models.CharField()),
                ("libelle", models.CharField()),
                (
                    "niveau_pilotage_ue",
                    models.CharField(
                        choices=[
                            ("NDR", "National avec éléments régionaux"),
                            ("NAT", "National"),
                            ("REG", "Régional"),
                            ("T", "Transnational"),
                        ]
                    ),
                ),
            ],
            options={
                "verbose_name": "Acteur géographique",
                "verbose_name_plural": "Acteurs géographiques (AG)",
            },
        ),
        migrations.CreateModel(
            name="IndicateurMesure",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("code", models.CharField()),
                ("libelle", models.CharField()),
                (
                    "unite",
                    models.CharField(
                        choices=[
                            ("Nb", "Nombre de"),
                            ("%", "Pourcentage"),
                            ("Acto", "Actions"),
                            ("Acti", "Activités"),
                            ("Cons", "Conseillers"),
                            ("Ruches", "Ruches"),
                            ("Apic", "Apiculteurs"),
                            ("Benef", "Bénéficiaires"),
                            ("m3", "Mètres cubes"),
                            ("j", "Jours"),
                            ("Eqpmt", "Equipement"),
                            ("EUR", "Euros"),
                            ("EUR/ha", "Euros par hectare"),
                            ("Agri", "Agriculteurs"),
                            ("%SurfForet", "Pourcentage de la surface forestière"),
                            ("Fonds", "Fonds"),
                            ("ha", "Hectares"),
                            ("Tête", "Tête"),
                            ("hl", "Hectolitres"),
                            ("h", "Heures"),
                            ("km2", "Kilomètres carrés"),
                            ("Belevage", "Batiment d'élevage"),
                            ("UGB", "Unités Gros Bétail"),
                            ("%UGB", "Pourcentage d’UGB"),
                            ("m", "Mètres"),
                            ("ExpAgr", "Exploitations agricoles"),
                            ("MW", "Mégawatt"),
                            ("PO", "Programmes opérationnels"),
                            ("Ope", "Opérations"),
                            ("PersCons", "Personnes conseillées"),
                            ("Pers", "Personnes"),
                            ("Veg", "Végétaux"),
                            ("ActoPrep", "Actions préparatoires LEADER"),
                            ("Prjs", "Projets"),
                            ("Prj", "Projet"),
                            ("ReiAb", "Reines des abeilles et abeilles"),
                            ("Ech", "Echantillons"),
                            ("Chien", "Chien de protection"),
                            ("Vers", "Vers à soie"),
                            ("m2", "Mètres carrés"),
                            ("Strat", "Stratégies LEADER"),
                            ("TEP", "Tonnes d’équivalent pétrole (TEP)"),
                            ("%SupTot", "Pourcentage de la surface totale"),
                            ("Arbres", "Arbres"),
                            ("%SAU", "Pourcentage de SAU"),
                        ]
                    ),
                ),
            ],
            options={
                "verbose_name": "Indicateur mesuré",
                "verbose_name_plural": "Indicateurs mesurés (MI)",
            },
        ),
        migrations.CreateModel(
            name="IndicateurRealisation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("id_sfc", models.CharField()),
                ("code_sfc", models.CharField()),
                ("code", models.CharField()),
                ("libelle", models.CharField()),
                (
                    "type_monitoring",
                    models.CharField(choices=[("A", "Apurement"), ("S", "Suivi")]),
                ),
                (
                    "unites",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(
                            choices=[
                                ("Nb", "Nombre de"),
                                ("%", "Pourcentage"),
                                ("Acto", "Actions"),
                                ("Acti", "Activités"),
                                ("Cons", "Conseillers"),
                                ("Ruches", "Ruches"),
                                ("Apic", "Apiculteurs"),
                                ("Benef", "Bénéficiaires"),
                                ("m3", "Mètres cubes"),
                                ("j", "Jours"),
                                ("Eqpmt", "Equipement"),
                                ("EUR", "Euros"),
                                ("EUR/ha", "Euros par hectare"),
                                ("Agri", "Agriculteurs"),
                                ("%SurfForet", "Pourcentage de la surface forestière"),
                                ("Fonds", "Fonds"),
                                ("ha", "Hectares"),
                                ("Tête", "Tête"),
                                ("hl", "Hectolitres"),
                                ("h", "Heures"),
                                ("km2", "Kilomètres carrés"),
                                ("Belevage", "Batiment d'élevage"),
                                ("UGB", "Unités Gros Bétail"),
                                ("%UGB", "Pourcentage d’UGB"),
                                ("m", "Mètres"),
                                ("ExpAgr", "Exploitations agricoles"),
                                ("MW", "Mégawatt"),
                                ("PO", "Programmes opérationnels"),
                                ("Ope", "Opérations"),
                                ("PersCons", "Personnes conseillées"),
                                ("Pers", "Personnes"),
                                ("Veg", "Végétaux"),
                                ("ActoPrep", "Actions préparatoires LEADER"),
                                ("Prjs", "Projets"),
                                ("Prj", "Projet"),
                                ("ReiAb", "Reines des abeilles et abeilles"),
                                ("Ech", "Echantillons"),
                                ("Chien", "Chien de protection"),
                                ("Vers", "Vers à soie"),
                                ("m2", "Mètres carrés"),
                                ("Strat", "Stratégies LEADER"),
                                ("TEP", "Tonnes d’équivalent pétrole (TEP)"),
                                ("%SupTot", "Pourcentage de la surface totale"),
                                ("Arbres", "Arbres"),
                                ("%SAU", "Pourcentage de SAU"),
                            ]
                        ),
                        size=None,
                    ),
                ),
                ("double_compte_autorise", models.BooleanField()),
                ("autres_unites_planification_possibles", models.BooleanField()),
            ],
            options={
                "verbose_name": "Indicateur de réalisation",
                "verbose_name_plural": "Indicateurs de réalisation (OI)",
            },
        ),
        migrations.CreateModel(
            name="ObjectifGenerique",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("code", models.CharField()),
                ("libelle", models.CharField()),
            ],
            options={
                "verbose_name": "Objectif générique",
                "verbose_name_plural": "Objectifs génériques (OG)",
            },
        ),
        migrations.CreateModel(
            name="Organisme",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("code_structure_payeuse", models.CharField()),
                ("code_sfc", models.CharField()),
                ("code", models.CharField()),
                ("libelle", models.CharField()),
                ("libelle_structure_payeuse", models.CharField()),
            ],
            options={
                "verbose_name": "Organisme",
                "verbose_name_plural": "Organismes payeurs ou opérateurs (SP ou OP)",
            },
        ),
        migrations.CreateModel(
            name="Secteur",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("code", models.CharField()),
                ("code_sfc", models.CharField()),
                ("id_sfc", models.CharField()),
                ("libelle", models.CharField()),
            ],
            options={
                "verbose_name": "Secteur",
                "verbose_name_plural": "Secteurs",
            },
        ),
        migrations.CreateModel(
            name="TypeIntervention",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("id_sfc", models.CharField()),
                ("code_sfc", models.CharField()),
                ("code", models.CharField()),
                (
                    "forme",
                    models.CharField(
                        choices=[
                            ("DPdecoupled", "Paiements directs découplés"),
                            ("DPcoupled", "Paiements directs couplés"),
                            ("Sectoral", "Interventions sectorielles"),
                            ("RD", "Développement rural"),
                        ]
                    ),
                ),
                (
                    "fonds",
                    models.CharField(choices=[("332", "FEADER"), ("333", "FEAGA")]),
                ),
                ("libelle", models.CharField()),
                ("libelle_sfc", models.CharField()),
                ("article", models.CharField()),
            ],
            options={
                "verbose_name": "Type d’intervention",
                "verbose_name_plural": "Types d’interventions",
            },
        ),
        migrations.CreateModel(
            name="IndicateurResultat",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("id_sfc", models.CharField()),
                ("code_sfc", models.CharField()),
                ("code", models.CharField()),
                ("libelle", models.CharField()),
                ("libelle_sfc", models.CharField()),
                ("libelle_long", models.CharField()),
                (
                    "type",
                    models.CharField(choices=[("A", "Annuel"), ("C", "Cumulatif")]),
                ),
                ("type_calcul", models.CharField()),
                (
                    "type_monitoring",
                    models.CharField(choices=[("E", "Examen"), ("S", "Suivi")]),
                ),
                (
                    "unite",
                    models.CharField(
                        choices=[
                            ("Nb", "Nombre de"),
                            ("%", "Pourcentage"),
                            ("Acto", "Actions"),
                            ("Acti", "Activités"),
                            ("Cons", "Conseillers"),
                            ("Ruches", "Ruches"),
                            ("Apic", "Apiculteurs"),
                            ("Benef", "Bénéficiaires"),
                            ("m3", "Mètres cubes"),
                            ("j", "Jours"),
                            ("Eqpmt", "Equipement"),
                            ("EUR", "Euros"),
                            ("EUR/ha", "Euros par hectare"),
                            ("Agri", "Agriculteurs"),
                            ("%SurfForet", "Pourcentage de la surface forestière"),
                            ("Fonds", "Fonds"),
                            ("ha", "Hectares"),
                            ("Tête", "Tête"),
                            ("hl", "Hectolitres"),
                            ("h", "Heures"),
                            ("km2", "Kilomètres carrés"),
                            ("Belevage", "Batiment d'élevage"),
                            ("UGB", "Unités Gros Bétail"),
                            ("%UGB", "Pourcentage d’UGB"),
                            ("m", "Mètres"),
                            ("ExpAgr", "Exploitations agricoles"),
                            ("MW", "Mégawatt"),
                            ("PO", "Programmes opérationnels"),
                            ("Ope", "Opérations"),
                            ("PersCons", "Personnes conseillées"),
                            ("Pers", "Personnes"),
                            ("Veg", "Végétaux"),
                            ("ActoPrep", "Actions préparatoires LEADER"),
                            ("Prjs", "Projets"),
                            ("Prj", "Projet"),
                            ("ReiAb", "Reines des abeilles et abeilles"),
                            ("Ech", "Echantillons"),
                            ("Chien", "Chien de protection"),
                            ("Vers", "Vers à soie"),
                            ("m2", "Mètres carrés"),
                            ("Strat", "Stratégies LEADER"),
                            ("TEP", "Tonnes d’équivalent pétrole (TEP)"),
                            ("%SupTot", "Pourcentage de la surface totale"),
                            ("Arbres", "Arbres"),
                            ("%SAU", "Pourcentage de SAU"),
                        ]
                    ),
                ),
                ("surfacique", models.BooleanField()),
                (
                    "moment_collecte",
                    models.CharField(choices=[("A", "Acompte"), ("S", "Solde")]),
                ),
                ("double_compte_autorise", models.BooleanField()),
                (
                    "indicateur_mesure",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="pac.indicateurmesure",
                    ),
                ),
            ],
            options={
                "verbose_name": "Indicateur de résultat",
                "verbose_name_plural": "Indicateurs de résultat (RI)",
            },
        ),
        migrations.CreateModel(
            name="ObjectifSpecifique",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("code_sfc", models.CharField()),
                ("code", models.CharField()),
                ("id_sfc", models.CharField()),
                ("libelle", models.CharField()),
                ("libelle_long", models.CharField()),
                (
                    "objectif_generique",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="pac.objectifgenerique",
                    ),
                ),
            ],
            options={
                "verbose_name": "Objectif spécifique",
                "verbose_name_plural": "Objectifs spécifiques (OS)",
            },
        ),
        migrations.CreateModel(
            name="Besoin",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("id_sfc", models.CharField()),
                ("code_sfc", models.CharField()),
                ("code", models.CharField()),
                ("libelle", models.CharField()),
                ("libelle_long", models.CharField()),
                (
                    "priorite",
                    models.CharField(
                        choices=[
                            ("Priorité 1", "Priorité 1"),
                            ("Priorité 2", "Priorité 2"),
                            ("Priorité 3", "Priorité 3"),
                        ]
                    ),
                ),
                (
                    "objectif_specifique",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="pac.objectifspecifique",
                    ),
                ),
            ],
            options={
                "verbose_name": "Besoin",
                "verbose_name_plural": "Besoins",
            },
        ),
        migrations.CreateModel(
            name="IndicateurContexte",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("id_sfc", models.CharField()),
                ("code_sfc", models.CharField()),
                ("code", models.CharField()),
                ("libelle", models.CharField()),
                (
                    "unite",
                    models.CharField(
                        choices=[
                            ("Nb", "Nombre de"),
                            ("%", "Pourcentage"),
                            ("Acto", "Actions"),
                            ("Acti", "Activités"),
                            ("Cons", "Conseillers"),
                            ("Ruches", "Ruches"),
                            ("Apic", "Apiculteurs"),
                            ("Benef", "Bénéficiaires"),
                            ("m3", "Mètres cubes"),
                            ("j", "Jours"),
                            ("Eqpmt", "Equipement"),
                            ("EUR", "Euros"),
                            ("EUR/ha", "Euros par hectare"),
                            ("Agri", "Agriculteurs"),
                            ("%SurfForet", "Pourcentage de la surface forestière"),
                            ("Fonds", "Fonds"),
                            ("ha", "Hectares"),
                            ("Tête", "Tête"),
                            ("hl", "Hectolitres"),
                            ("h", "Heures"),
                            ("km2", "Kilomètres carrés"),
                            ("Belevage", "Batiment d'élevage"),
                            ("UGB", "Unités Gros Bétail"),
                            ("%UGB", "Pourcentage d’UGB"),
                            ("m", "Mètres"),
                            ("ExpAgr", "Exploitations agricoles"),
                            ("MW", "Mégawatt"),
                            ("PO", "Programmes opérationnels"),
                            ("Ope", "Opérations"),
                            ("PersCons", "Personnes conseillées"),
                            ("Pers", "Personnes"),
                            ("Veg", "Végétaux"),
                            ("ActoPrep", "Actions préparatoires LEADER"),
                            ("Prjs", "Projets"),
                            ("Prj", "Projet"),
                            ("ReiAb", "Reines des abeilles et abeilles"),
                            ("Ech", "Echantillons"),
                            ("Chien", "Chien de protection"),
                            ("Vers", "Vers à soie"),
                            ("m2", "Mètres carrés"),
                            ("Strat", "Stratégies LEADER"),
                            ("TEP", "Tonnes d’équivalent pétrole (TEP)"),
                            ("%SupTot", "Pourcentage de la surface totale"),
                            ("Arbres", "Arbres"),
                            ("%SAU", "Pourcentage de SAU"),
                        ]
                    ),
                ),
                ("valeurs", django.contrib.postgres.fields.hstore.HStoreField()),
                (
                    "secteur",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="pac.secteur"
                    ),
                ),
            ],
            options={
                "verbose_name": "Indicateur de contexte",
                "verbose_name_plural": "Indicateurs de contexte (CI)",
            },
        ),
        migrations.CreateModel(
            name="Intervention",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("code", models.CharField()),
                ("libelle", models.CharField()),
                (
                    "niveau_pilotage_ue",
                    models.CharField(
                        choices=[
                            ("NDR", "National avec éléments régionaux"),
                            ("NAT", "National"),
                            ("REG", "Régional"),
                            ("T", "Transnational"),
                        ]
                    ),
                ),
                (
                    "forme",
                    models.CharField(
                        choices=[
                            ("DPdecoupled", "Paiements directs découplés"),
                            ("DPcoupled", "Paiements directs couplés"),
                            ("Sectoral", "Interventions sectorielles"),
                            ("RD", "Développement rural"),
                        ]
                    ),
                ),
                (
                    "type_zone_ichn",
                    models.CharField(
                        choices=[
                            ("MO", "Zones de montagne"),
                            ("CN", "ZSCN - zone à contraintes naturelles importantes"),
                            ("CS", "ZSCS - Zones à contraintes spécifiques"),
                        ]
                    ),
                ),
                (
                    "fonds_agricole",
                    models.CharField(choices=[("332", "FEADER"), ("333", "FEAGA")]),
                ),
                (
                    "type_soutien_ab",
                    models.CharField(
                        choices=[
                            ("CAB", "Soutien à la conversion en AB"),
                            ("MAB", "Soutien au maintien en AB"),
                        ]
                    ),
                ),
                ("sanctuarisation_environnement", models.BooleanField()),
                ("sanctuarisation_ja", models.BooleanField()),
                ("participation_objectif_climatique", models.BooleanField()),
                ("irrigation", models.BooleanField()),
                (
                    "acteur_geographique",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="pac.acteurgeographique",
                    ),
                ),
                ("besoins", models.ManyToManyField(to="pac.besoin")),
                (
                    "indicateur_realisation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="pac.indicateurrealisation",
                    ),
                ),
                (
                    "indicateurs_resultat",
                    models.ManyToManyField(to="pac.indicateurresultat"),
                ),
                (
                    "operateur",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="interventions_as_operateur",
                        to="pac.organisme",
                    ),
                ),
                (
                    "structure_payante",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="interventions_as_structure_payante",
                        to="pac.organisme",
                    ),
                ),
                (
                    "secteur",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="pac.secteur"
                    ),
                ),
                (
                    "type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="pac.typeintervention",
                    ),
                ),
            ],
            options={
                "verbose_name": "Intervention",
                "verbose_name_plural": "Interventions",
            },
        ),
    ]
